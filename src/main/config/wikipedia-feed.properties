# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Job
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=wikipedia-feed

# YARN
yarn.package.path=file:///Users/snoghabi/Projects/test-opensource-original-again/hello-samza/target/hello-samza-0.10.0-SNAPSHOT-dist.tar.gz
#yarn.am.opts=-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005

# Task
task.class=samza.examples.wikipedia.task.WikipediaFeedStreamTask
task.inputs=wikipedia.#en.wikipedia,wikipedia.#en.wiktionary,wikipedia.#en.wikinews

# Serializers
serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory

# Wikipedia System
systems.wikipedia.samza.factory=samza.examples.wikipedia.system.WikipediaSystemFactory
systems.wikipedia.host=irc.wikimedia.org
systems.wikipedia.port=6667

# Kafka System
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.msg.serde=json
systems.kafka.consumer.zookeeper.connect=localhost:2181/
systems.kafka.producer.bootstrap.servers=localhost:9092

# Job Coordinator
job.coordinator.system=kafka
# Add configuration to disable checkpointing for this job once it is available in the Coordinator Stream model
# See https://issues.apache.org/jira/browse/SAMZA-465?focusedCommentId=14533346&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14533346 for more details
job.coordinator.replication.factor=1

#Config manager
yarn.rm.address=localhost
yarn.rm.port=8088

# Auto-scaling
#job.autoscaling.system=kafka
#job.autoscaling.mode=memory
#job.config.rewriter.auto-scaling-rewriter.class=org.apache.samza.config.AutoScalingConfigRewriter
#job.config.rewriters=auto-scaling-rewriter

#Define a metrics reporter called "auto-scaling", which publishes metrics every 60 seconds.
#metrics.reporters=auto-scaling
#metrics.reporter.auto-scaling.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory

#Tell the snapshot reporter to publish to a topic called "auto-scaling-metrics" in the "kafka" system
#metrics.reporter.auto-scaling.stream=kafka.auto-scaling-metrics

#Encode metrics data as JSON.
#serializers.registry.metrics-serde.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory
#systems.kafka.streams.auto-scaling-metrics.samza.msg.serde=metrics-serde


# Define a metrics reporter called "snapshot", which publishes metrics
# every 60 seconds.
metrics.reporters=snapshot
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory

# Tell the snapshot reporter to publish to a topic called "metrics"
# in the "kafka" system.
metrics.reporter.snapshot.stream=kafka.metrics
metrics.reporter.snapshot.interval=10


# Encode metrics data as JSON.
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory
systems.kafka.streams.metrics.samza.msg.serde=metrics
