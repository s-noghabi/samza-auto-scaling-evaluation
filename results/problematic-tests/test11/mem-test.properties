# License to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Job
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=shadi-mem-test-11

# YARN
#yarn.package.path=file://${basedi/target/${project.artifactId}-${pom.version}-dist.tar.gz
yarn.package.path=http://snoghabi-ld1.linkedin.biz/hello-samza-0.10.0-SNAPSHOT-dist.tar.gz
#yarn.container.memory.mb=1024
# Task
task.class=samza.examples.memtest.task.MemTestTask
task.inputs=kafka.shadi-mem-test-in
task.opts=-Xmx800m -Xloggc:/tmp/gc2 -XX:+PrintGCDetails -XX:+AlwaysPreTouch
#task.window.ms=1000
#task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
#task.checkpoint.system=kafka
# Normally, this would be 3, but we have only one broker.
#task.checkpoint.replication.factor=1
# Serializers
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory
serializers.registry.integer.class=org.apache.samza.serializers.IntegerSerdeFactory

# Systems
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.msg.serde=string
systems.kafka.consumer.zookeeper.connect=zk-lca1-kafka.corp.linkedin.com:12913/kafka-queuing
systems.kafka.consumer.auto.offset.reset=largest
systems.kafka.producer.bootstrap.servers=lca1-kafka-kafka-queuing-vip.corp.linkedin.com:10251
systems.kafka.samza.fetch.threshold=50000
# Key-value storage
#stores.shadi-mem-kv.factory=org.apache.samza.storage.kv.RocksDbKeyValueStorageEngineFactory
#stores.shadi-mem-kv.changelog=kafka.shadi-mem-test-changelog
#stores.shadi-mem-kv.key.serde=string
#stores.shadi-mem-kv.msg.serde=string

# Normally, we'd leave this alone, but we have only one broker.
#stores.shadi-mem-kv.changelog.replication.factor=1

# Normally, we'd set this much higher, but we want things to look snappy in the demo.
#stores.shadi-mem-kv.write.batch.size=20
#stores.shadi-mem-kv.object.cache.size=20

# Job Coordinator
job.coordinator.system=kafka
# Add configuration to disable checkpointing for this job once it is available in the Coordinator Stream model
# See https://issues.apache.org/jira/browse/SAMZA-465?focusedCommentId=14533346&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14533346 for more details
job.coordinator.replication.factor=1

#Config manager
yarn.rm.address=lca1-app0549.corp.linkedin.com
yarn.rm.port=8088

# Auto-scaling
job.autoscaling.system=kafka
job.autoscaling.mode=memory
job.config.rewriter.auto-scaling-rewriter.class=org.apache.samza.config.AutoScalingConfigRewriter
job.config.rewriters=auto-scaling-rewriter
metrics.reporter.auto-scaling.interval=10
